###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html
name: Sanity
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # Run once a month (at 06:00 UTC the 12th)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-core version
  schedule:
    - cron: '0 6 12 * *'
env:
  CACHE_VERSION: 2022031102 # To be able to create a new cache (YYYYMMDDXX)

concurrency:
  group: sanity-${{ github.ref || github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'master' }}
jobs:
  sanity:
    name: Sanity ${{ matrix.ansible }}
    strategy:
      fail-fast: ${{ github.ref != 'master' }}
      matrix:
        ansible:
#          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - devel
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
#          python-version: 3.8

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: ${{env.CACHE_VERSION}}-docker-cache-ansible-${{ matrix.ansible }}-{hash}
          restore-keys: ${{env.CACHE_VERSION}}-docker-cache-ansible-${{ matrix.ansible }}-

      - name: Configure test environment
        run: make configure-test-env && make build-for-test

      - name: Execute python tests
        if: ${{ matrix.ansible == 'devel' }}
        run: make test-python

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all python versions ansible supports.
      - name: Run sanity tests
        run: make test-ansible-sanity sanity_o="--docker --color --coverage"

      # ansible-test support producing code coverage
      - name: Generate coverage report
        run: make test-ansible-coverage coverage_o="-v --requirements --group-by command --group-by version"

      # See the reports at https://codecov.io/gh/yoanm/ansible-utils-collection
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false
