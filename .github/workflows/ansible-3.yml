###
# Integration tests (RECOMMENDED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_integration.html
#
# If the application you are testing is available as a docker container and you want to test
# multiple versions see the following for an example:
# https://github.com/ansible-collections/community.zabbix/tree/master/.github/workflows
name: Integration
on:
  push:
    branches: [master]
    paths:
      - 'plugins/**'
      - 'tests/integration/**'
      - '.github/workflows/ansible-3.yml'
  pull_request:
    branches: [master]
    paths:
      - 'plugins/**'
      - 'tests/integration/**'
      - '.github/workflows/plugins-integration.yml'
  # Run once a month (at 10:00 UTC the 26th)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-core version
  schedule:
    - cron: '0 10 26 * *'
env:
  CACHE_VERSION: 2022031102 # To be able to create a new cache (YYYYMMDDXX)

concurrency:
  group: ci-${{ github.ref || github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'master' }}
jobs:
  integration:
    runs-on: ubuntu-latest
    name: Integration ${{ matrix.ansible }}+py${{ matrix.python }}
    strategy:
      max-parallel: 8
      fail-fast: ${{ github.ref != 'master' }}
      matrix:
        ansible:
#          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - devel
        python:
#          - '2.6'
          - '2.7'
          - '3.5'
          - '3.6'
#          - '3.7'
#          - '3.8'
          - '3.9'
#          - '3.10'
        exclude:
          # Because ansible-test doesn't support Python 3.9 for Ansible 2.9
          # and Python 3.10 is supported in 2.12 or later.
          - ansible: stable-2.9
            python: '3.9'
          - ansible: stable-2.9
            python: '3.10'
          - ansible: stable-2.10
            python: '3.10'
          - ansible: stable-2.11
            python: '3.10'

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
#          python-version: 3.8

      - name: Install ansible (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: ${{env.CACHE_VERSION}}-docker-cache-ansible-${{ matrix.ansible }}-${{ matrix.python }}-{hash}
          restore-keys: ${{env.CACHE_VERSION}}-docker-cache-ansible-${{ matrix.ansible }}-${{ matrix.python }}-

      - name: Configure test environment
        run: make configure-test-env && make build-for-test

      # ansible-test support producing code coverage
      - name: Run integration tests
        run: make test-ansible-integration integration_o="-v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --docker --coverage"

      - name: Generate coverage report
        run: make test-ansible-coverage coverage_o="-v --requirements --group-by command --group-by version"

      # See the reports at https://codecov.io/gh/yoanm/ansible-utils-collection
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false
